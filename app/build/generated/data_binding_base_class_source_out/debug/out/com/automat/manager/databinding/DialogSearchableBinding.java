// Generated by view binder compiler. Do not edit!
package com.automat.manager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.automat.manager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSearchableBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btReloadDialog;

  @NonNull
  public final EditText etSearchOfList;

  @NonNull
  public final ListView lvOfSearchable;

  @NonNull
  public final ProgressBar pbDialog;

  @NonNull
  public final TextView tvDescriptionOfSearchable;

  private DialogSearchableBinding(@NonNull LinearLayout rootView, @NonNull Button btReloadDialog,
      @NonNull EditText etSearchOfList, @NonNull ListView lvOfSearchable,
      @NonNull ProgressBar pbDialog, @NonNull TextView tvDescriptionOfSearchable) {
    this.rootView = rootView;
    this.btReloadDialog = btReloadDialog;
    this.etSearchOfList = etSearchOfList;
    this.lvOfSearchable = lvOfSearchable;
    this.pbDialog = pbDialog;
    this.tvDescriptionOfSearchable = tvDescriptionOfSearchable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSearchableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSearchableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_searchable, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSearchableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_reload_dialog;
      Button btReloadDialog = ViewBindings.findChildViewById(rootView, id);
      if (btReloadDialog == null) {
        break missingId;
      }

      id = R.id.et_search_of_list;
      EditText etSearchOfList = ViewBindings.findChildViewById(rootView, id);
      if (etSearchOfList == null) {
        break missingId;
      }

      id = R.id.lv_of_searchable;
      ListView lvOfSearchable = ViewBindings.findChildViewById(rootView, id);
      if (lvOfSearchable == null) {
        break missingId;
      }

      id = R.id.pb_dialog;
      ProgressBar pbDialog = ViewBindings.findChildViewById(rootView, id);
      if (pbDialog == null) {
        break missingId;
      }

      id = R.id.tv_description_of_searchable;
      TextView tvDescriptionOfSearchable = ViewBindings.findChildViewById(rootView, id);
      if (tvDescriptionOfSearchable == null) {
        break missingId;
      }

      return new DialogSearchableBinding((LinearLayout) rootView, btReloadDialog, etSearchOfList,
          lvOfSearchable, pbDialog, tvDescriptionOfSearchable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
