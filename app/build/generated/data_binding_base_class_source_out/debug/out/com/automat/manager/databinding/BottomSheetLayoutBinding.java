// Generated by view binder compiler. Do not edit!
package com.automat.manager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.automat.manager.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btSaveSetting;

  @NonNull
  public final TextInputEditText etSetting;

  @NonNull
  public final TextInputLayout etSettingLayout;

  @NonNull
  public final TextView tvSetting;

  @NonNull
  public final TextView tvSettingDescription;

  private BottomSheetLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btSaveSetting, @NonNull TextInputEditText etSetting,
      @NonNull TextInputLayout etSettingLayout, @NonNull TextView tvSetting,
      @NonNull TextView tvSettingDescription) {
    this.rootView = rootView;
    this.btSaveSetting = btSaveSetting;
    this.etSetting = etSetting;
    this.etSettingLayout = etSettingLayout;
    this.tvSetting = tvSetting;
    this.tvSettingDescription = tvSettingDescription;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_save_setting;
      Button btSaveSetting = ViewBindings.findChildViewById(rootView, id);
      if (btSaveSetting == null) {
        break missingId;
      }

      id = R.id.et_setting;
      TextInputEditText etSetting = ViewBindings.findChildViewById(rootView, id);
      if (etSetting == null) {
        break missingId;
      }

      id = R.id.et_setting_layout;
      TextInputLayout etSettingLayout = ViewBindings.findChildViewById(rootView, id);
      if (etSettingLayout == null) {
        break missingId;
      }

      id = R.id.tv_setting;
      TextView tvSetting = ViewBindings.findChildViewById(rootView, id);
      if (tvSetting == null) {
        break missingId;
      }

      id = R.id.tv_setting_description;
      TextView tvSettingDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvSettingDescription == null) {
        break missingId;
      }

      return new BottomSheetLayoutBinding((ConstraintLayout) rootView, btSaveSetting, etSetting,
          etSettingLayout, tvSetting, tvSettingDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
