// Generated by view binder compiler. Do not edit!
package com.automat.manager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.automat.manager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCollectorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btCollectorExit;

  @NonNull
  public final Button btFrameOrder;

  @NonNull
  public final Button btFrameReturn;

  @NonNull
  public final FrameLayout containerCollector;

  @NonNull
  public final LinearLayout linearLayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout llCollectorTop;

  private ActivityCollectorBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btCollectorExit, @NonNull Button btFrameOrder,
      @NonNull Button btFrameReturn, @NonNull FrameLayout containerCollector,
      @NonNull LinearLayout linearLayout, @Nullable LinearLayout llCollectorTop) {
    this.rootView = rootView;
    this.btCollectorExit = btCollectorExit;
    this.btFrameOrder = btFrameOrder;
    this.btFrameReturn = btFrameReturn;
    this.containerCollector = containerCollector;
    this.linearLayout = linearLayout;
    this.llCollectorTop = llCollectorTop;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCollectorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCollectorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_collector, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCollectorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_collector_exit;
      ImageButton btCollectorExit = ViewBindings.findChildViewById(rootView, id);
      if (btCollectorExit == null) {
        break missingId;
      }

      id = R.id.bt_frame_order;
      Button btFrameOrder = ViewBindings.findChildViewById(rootView, id);
      if (btFrameOrder == null) {
        break missingId;
      }

      id = R.id.bt_frame_return;
      Button btFrameReturn = ViewBindings.findChildViewById(rootView, id);
      if (btFrameReturn == null) {
        break missingId;
      }

      id = R.id.container_collector;
      FrameLayout containerCollector = ViewBindings.findChildViewById(rootView, id);
      if (containerCollector == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.llCollectorTop;
      LinearLayout llCollectorTop = ViewBindings.findChildViewById(rootView, id);

      return new ActivityCollectorBinding((ConstraintLayout) rootView, btCollectorExit,
          btFrameOrder, btFrameReturn, containerCollector, linearLayout, llCollectorTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
