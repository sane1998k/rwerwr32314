// Generated by view binder compiler. Do not edit!
package com.automat.manager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.automat.manager.R;
import com.budiyev.android.codescanner.CodeScannerView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDriver1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btCollectorCollected4;

  @NonNull
  public final ImageButton btCollectorExit4;

  @NonNull
  public final Button btCollectorScanEnable4;

  @NonNull
  public final CodeScannerView collectorScanner4;

  @NonNull
  public final ConstraintLayout constraint3;

  @NonNull
  public final TextInputLayout etNameBalloon3;

  @NonNull
  public final TextInputEditText etNameBalloon3Txt;

  @NonNull
  public final ProgressBar pbLoadCollector4;

  @NonNull
  public final RecyclerView rvCollectorBalloons4;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-normal/</li>
   * </ul>
   */
  @Nullable
  public final Space space2;

  @NonNull
  public final Spinner spinnerState3;

  @NonNull
  public final TextView tvCollectorCount4;

  @NonNull
  public final TextView tvCollectorNewOrder4;

  @NonNull
  public final TextView tvCollectorResultTxt4;

  private ActivityDriver1Binding(@NonNull ConstraintLayout rootView,
      @NonNull Button btCollectorCollected4, @NonNull ImageButton btCollectorExit4,
      @NonNull Button btCollectorScanEnable4, @NonNull CodeScannerView collectorScanner4,
      @NonNull ConstraintLayout constraint3, @NonNull TextInputLayout etNameBalloon3,
      @NonNull TextInputEditText etNameBalloon3Txt, @NonNull ProgressBar pbLoadCollector4,
      @NonNull RecyclerView rvCollectorBalloons4, @Nullable Space space2,
      @NonNull Spinner spinnerState3, @NonNull TextView tvCollectorCount4,
      @NonNull TextView tvCollectorNewOrder4, @NonNull TextView tvCollectorResultTxt4) {
    this.rootView = rootView;
    this.btCollectorCollected4 = btCollectorCollected4;
    this.btCollectorExit4 = btCollectorExit4;
    this.btCollectorScanEnable4 = btCollectorScanEnable4;
    this.collectorScanner4 = collectorScanner4;
    this.constraint3 = constraint3;
    this.etNameBalloon3 = etNameBalloon3;
    this.etNameBalloon3Txt = etNameBalloon3Txt;
    this.pbLoadCollector4 = pbLoadCollector4;
    this.rvCollectorBalloons4 = rvCollectorBalloons4;
    this.space2 = space2;
    this.spinnerState3 = spinnerState3;
    this.tvCollectorCount4 = tvCollectorCount4;
    this.tvCollectorNewOrder4 = tvCollectorNewOrder4;
    this.tvCollectorResultTxt4 = tvCollectorResultTxt4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDriver1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDriver1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_driver1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDriver1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_collector_collected4;
      Button btCollectorCollected4 = ViewBindings.findChildViewById(rootView, id);
      if (btCollectorCollected4 == null) {
        break missingId;
      }

      id = R.id.bt_collector_exit4;
      ImageButton btCollectorExit4 = ViewBindings.findChildViewById(rootView, id);
      if (btCollectorExit4 == null) {
        break missingId;
      }

      id = R.id.bt_collector_scan_enable4;
      Button btCollectorScanEnable4 = ViewBindings.findChildViewById(rootView, id);
      if (btCollectorScanEnable4 == null) {
        break missingId;
      }

      id = R.id.collector_scanner4;
      CodeScannerView collectorScanner4 = ViewBindings.findChildViewById(rootView, id);
      if (collectorScanner4 == null) {
        break missingId;
      }

      ConstraintLayout constraint3 = (ConstraintLayout) rootView;

      id = R.id.et_name_balloon_3;
      TextInputLayout etNameBalloon3 = ViewBindings.findChildViewById(rootView, id);
      if (etNameBalloon3 == null) {
        break missingId;
      }

      id = R.id.et_name_balloon_3_txt;
      TextInputEditText etNameBalloon3Txt = ViewBindings.findChildViewById(rootView, id);
      if (etNameBalloon3Txt == null) {
        break missingId;
      }

      id = R.id.pb_load_collector4;
      ProgressBar pbLoadCollector4 = ViewBindings.findChildViewById(rootView, id);
      if (pbLoadCollector4 == null) {
        break missingId;
      }

      id = R.id.rv_collector_balloons4;
      RecyclerView rvCollectorBalloons4 = ViewBindings.findChildViewById(rootView, id);
      if (rvCollectorBalloons4 == null) {
        break missingId;
      }

      id = R.id.space2;
      Space space2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.spinner_state_3;
      Spinner spinnerState3 = ViewBindings.findChildViewById(rootView, id);
      if (spinnerState3 == null) {
        break missingId;
      }

      id = R.id.tv_collector_count4;
      TextView tvCollectorCount4 = ViewBindings.findChildViewById(rootView, id);
      if (tvCollectorCount4 == null) {
        break missingId;
      }

      id = R.id.tv_collector_new_order4;
      TextView tvCollectorNewOrder4 = ViewBindings.findChildViewById(rootView, id);
      if (tvCollectorNewOrder4 == null) {
        break missingId;
      }

      id = R.id.tv_collector_result_txt4;
      TextView tvCollectorResultTxt4 = ViewBindings.findChildViewById(rootView, id);
      if (tvCollectorResultTxt4 == null) {
        break missingId;
      }

      return new ActivityDriver1Binding((ConstraintLayout) rootView, btCollectorCollected4,
          btCollectorExit4, btCollectorScanEnable4, collectorScanner4, constraint3, etNameBalloon3,
          etNameBalloon3Txt, pbLoadCollector4, rvCollectorBalloons4, space2, spinnerState3,
          tvCollectorCount4, tvCollectorNewOrder4, tvCollectorResultTxt4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
