// Generated by view binder compiler. Do not edit!
package com.automat.manager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.automat.manager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RvLogisticianOrderItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView tvBalloonCount;

  @NonNull
  public final TextView tvCarName;

  @NonNull
  public final TextView tvCounterpartyName;

  @NonNull
  public final TextView tvDateOfOrder;

  @NonNull
  public final TextView tvDriveName;

  @NonNull
  public final TextView tvGasTypeName;

  private RvLogisticianOrderItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView tvBalloonCount, @NonNull TextView tvCarName,
      @NonNull TextView tvCounterpartyName, @NonNull TextView tvDateOfOrder,
      @NonNull TextView tvDriveName, @NonNull TextView tvGasTypeName) {
    this.rootView = rootView;
    this.tvBalloonCount = tvBalloonCount;
    this.tvCarName = tvCarName;
    this.tvCounterpartyName = tvCounterpartyName;
    this.tvDateOfOrder = tvDateOfOrder;
    this.tvDriveName = tvDriveName;
    this.tvGasTypeName = tvGasTypeName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RvLogisticianOrderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RvLogisticianOrderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rv_logistician_order_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RvLogisticianOrderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_balloon_count;
      TextView tvBalloonCount = ViewBindings.findChildViewById(rootView, id);
      if (tvBalloonCount == null) {
        break missingId;
      }

      id = R.id.tv_car_name;
      TextView tvCarName = ViewBindings.findChildViewById(rootView, id);
      if (tvCarName == null) {
        break missingId;
      }

      id = R.id.tv_counterparty_name;
      TextView tvCounterpartyName = ViewBindings.findChildViewById(rootView, id);
      if (tvCounterpartyName == null) {
        break missingId;
      }

      id = R.id.tv_date_of_order;
      TextView tvDateOfOrder = ViewBindings.findChildViewById(rootView, id);
      if (tvDateOfOrder == null) {
        break missingId;
      }

      id = R.id.tv_drive_name;
      TextView tvDriveName = ViewBindings.findChildViewById(rootView, id);
      if (tvDriveName == null) {
        break missingId;
      }

      id = R.id.tv_gas_type_name;
      TextView tvGasTypeName = ViewBindings.findChildViewById(rootView, id);
      if (tvGasTypeName == null) {
        break missingId;
      }

      return new RvLogisticianOrderItemBinding((ConstraintLayout) rootView, tvBalloonCount,
          tvCarName, tvCounterpartyName, tvDateOfOrder, tvDriveName, tvGasTypeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
